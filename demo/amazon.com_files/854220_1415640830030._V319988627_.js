!function(e,n){function t(t){var a=n.getElementById("lightboxModal854220");a&&n.body.removeChild(a);var i=n.createElement("div");i.id="lightboxModal854220",i.innerHTML='<div style="display:none">&nbsp</div><style>\n#lightboxPopup854220 {\n    position:fixed;\n    width:100%;\n    height:100%;\n    z-index:5000;\n    overflow:auto;\n    top:0;\n    left:0;\n    display: none;\n}\n\n#lightboxPopupContainer854220,#lightboxOverlay854220,#lightboxIframe854220 {\n    position:absolute;\n    min-width:940px;\n    min-height:600px;\n    width:100%;\n    height:100%;\n    border:0;\n}\n\n#lightboxOverlay854220 {\n    background-color:#000;\n    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=40)";\n    filter:alpha(opacity=40);\n    opacity:0.4;\n    z-index:5000;\n}\n\n#lightboxIframe854220 {\n    z-index: 6000;\n    background:transparent;\n}\n\n.lightboxPopup {\n    position:fixed;\n    z-index:6000;\n}\n\n.lightbox-popupBody {\n    overflow: hidden;\n}\n</style>\n<div id="lightboxPopup854220">\n    <div id="lightboxPopupContainer854220"></div>\n</div>\n',n.body.appendChild(i);var r=n.getElementById("lightboxPopup854220"),o=n.getElementById("lightboxPopupContainer854220"),l=n.createElement("iframe");l.id="lightboxIframe854220",l.allowTransparency="true",l.frameBorder=0,l.scrolling="no",o.appendChild(l),e.daLBInfo=e.daLBInfo||{};var s=e.daLBInfo["854220"]=e.daLBInfo["854220"]||{};s.data=s.data||{},l.lightboxInfo=s;var c=null,d=null,m=function(){if(r.style.display="block",n.body.className+=" lightbox-popupBody",/MSIE/.test(navigator.userAgent)&&"BackCompat"==n.compatMode||/MSIE 6/.test(navigator.userAgent)){n.documentElement.style.height="100%",oldBodyStyle=n.body.style.cssText,n.body.style.cssText+=";margin:0 !important; height:100%; padding: 0; overflow:hidden;",/MSIE 10/.test(navigator.userAgent)||(r.style.position="absolute");try{r.style.setExpression("top","(_=(document.documentElement.scrollTop || document.body.scrollTop))+'px'"),r.style.setExpression("left","(_=(document.documentElement.scrollLeft || document.body.scrollLeft))+'px'"),p.style.setExpression("height","Math.max(document.documentElement.clientHeight || document.body.clientHeight, 640) + 'px'"),p.style.setExpression("width","Math.max(document.documentElement.clientWidth || document.body.clientWidth, 1020) + 'px'"),o.style.setExpression("height","Math.max(document.documentElement.clientHeight || document.body.clientHeight, 640) + 'px'"),o.style.setExpression("width","Math.max(document.documentElement.clientWidth || document.body.clientWidth, 1020) + 'px'")}catch(e){}}"function"==typeof c&&c()},h=function(){r.style.display="none";var e=new RegExp("(\\s|^)lightbox-popupBody(\\s|$)");n.body.className=n.body.className.replace(e,""),setTimeout(function(){s.alreadyClicked=null},200),"function"==typeof d&&d()};s.close=function(){h()},s.modalIsReady=function(e,t){if(c=e,d=t,s.clickCallBack=function(){m()},s.alreadyClicked){var a=n.getElementById("sl-loading854220");a&&(a.style.display="none"),m()}};var u=l.contentWindow.document;u.open("text/html","replace"),u.write(t),u.close();var p=u.getElementById("lightboxOverlay854220");this.getInfo=function(){return s}}var a=(new t("\n<!-- Buy-Box parameters -->\n\n    \n    \n    \n    \n\n\n\n    \n\n\n\n\n\n\n\n<!-- video parameters -->\n\n\n\n\n\n\n\n<!-- video gallery parameters -->\n\n\n\n\n\n\n\n\n\n\n<!-- Animation Setup -->\n\n\n\n\n\n\n\n\n<!-- brand focus parameters -->\n\n\n\n<!--  customer reviews params -->\n\n\n\n\n\n\n\n<!-- Include the creative.css file from the local template -->\n<style>\n\n    /* Video Related */\n#videoContainer {\n    border: 1px solid #000000;\n    background: #000;\n    text-align: left;\n    width: 575px;\n    height: 335px;\n    margin: auto;\n}\n\n#video {\n    position: relative;\n    left: 0px;\n    top: 0px;\n    width: 575px;\n    height: 335px;\n    margin: 0;\n}\n\n#posterImage {\n    position: absolute;\n    left: 0px;\n    top: 0px;\n    height: 335px;\n    width: 575px;\n    margin: 0;\n    background-repeat: no-repeat;\n    -ms-box-sizing: content-box;\n}\n\n\n#VideoGallery {\n    width: 577px;\n    \n    position: absolute;\n    left: 20px;\n    top: 90px;\n    overflow: hidden;\n}\n\n\n\n\n#galleryHeroImage {\n    background-repeat: no-repeat;\n    height: 335px;\n    width: 575px;\n    position: absolute;\n    top: 0;\n    left: 0;\n    \n}\n\n\n/* International popover */\n\n\n\n\n\n\n\n    #modalCtaPrimary{position: absolute}\n\n\n\n\n#modalCtaSecondary{position: absolute}\n\nbody {\n    margin: 0;\n    padding: 0;\n    background-color:transparent;\n}\n\na img {\n    border:0;\n    outline:none;\n}\n\n#spotlightAd { \n    position:absolute;\n    top:50%;\n    left:50%;\n    margin-left:-470px;\n    margin-top:-300px;\n    z-index: 100;\n}\n\n#spotlightAd {\n    width:940px;\n    height:600px;\n    overflow:hidden;\n    border-color:#666666;\n    border-style:solid;\n    border-width:1px;\n}\n\n#link {\n    position:absolute;\n    cursor:pointer;\n    background-repeat:no-repeat;\n    width:100%;\n    height:100%;\n    background-repeat:no-repeat;\n    \n        top: 0;\n    \n    \n}\n\n.spotlight-popupBody {\n    overflow:hidden;\n    background-image:url(about:blank);\n    background-attachment:fixed;\n}\n\n\n\n#eCommerceContainer{\n    right: 23px;\n    position: absolute;\n    top: 90px;\n    width: 300px;\n    border: 1px solid #999999;\n    border-radius: 6px 6px 6px 6px;\n    display: none;\n    background-color: white;\n}\n\n#reviewsContainer{\n    border-radius: 0 0 6px 6px;\n}\n\n#ad {\n    padding: 8px;\n}\n\n#asinSprite {\n    overflow: hidden;\n}\n\n\n    #box {\n        float: right;\n        width: 144px;\n        position:relative;\n    }\n    #asinSprite {\n        float: left;\n    }\n\n\n\n\n\n\n\n#info {\n    border: 0;\n    border-radius: 0;\n    padding: 0;\n}\n\n\n\n#spotlightFeedback{\n    position: absolute;\n    \n        bottom: 10px;\n        right: 10px;\n    \n    cursor: pointer;\n}\n\n#spotlightCloseButton {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 64px;\n    height: 23px;\n    cursor: pointer;\n    background-position: 0 0;\n    background-repeat: no-repeat;\n}\n\n#ratingInfo { display: none; }\n\n#spotlightOverlay {\n    background-color:#000;\n    -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=40)\";\n    filter:alpha(opacity=40);\n    opacity:0.4;\n    position:fixed;\n    min-width:940px;\n    min-height:600px;\n    width:100%;\n    height:100%;\n    border:0;\n\n}\n\n#selector { \n    -webkit-appearance: menulist-button;\n    border-color: #a6a6a6;\n}\n\n.ie7 #spotlightOverlay {\n    position:absolute;\n}\n\n.cf:before, .cf:after {\n    content: \" \";\n    display: table;\n}\n\n.cf:after {\n    clear: both;\n}\n\n.cf {\n    *zoom: 1;\n}\n\n.hide{display:none!important;}\n\nelement.style {\n}\n#VideoGallery {\nleft: 10px;\ntop: 199px;\n}\n\n#spotlightFeedback {\nbottom: 7px;\nright: 34px;\n}\n\n#link{display:none}\n\n\n\n</style>\n\n<div id=\"spotlightOverlay\"></div>\n<div id=\"spotlightAd\" class=\"spotlightPopup\">\n    \n    <a id=\"link\"></a>\n\n    \n        <div id=\"VideoGallery\">\n        <div id=\"VideoGalleryPlayer\">\n            <div id=\"videoContainer\">\n    <div id=\"video\">\n        <div id=\"posterImage\"></div>\n    </div>\n</div>\n            <div id=\"galleryHeroImage\" class=\"hide\"></div>\n        </div>\n        \n    </div>\n\n    \n    \n    \n\n\n\n\n    <div id=\"modalCtaPrimary\"></div>\n\n    <div id=\"modalCtaSecondary\"></div>\n\n    <!-- feedback link -->\n    <p class=\"feedback\">\n        <a><img id=\"spotlightFeedback\"></a>\n    </p>\n    \n    <!-- closeButton -->\n    <div id=\"spotlightCloseButton\"></div>\n\n</div>\n\n<script>\n    /* \n    Propagate launcher inputted values\n    CommonUtils/2 uses document.spotlightInfo for ad/creative/impression IDs\n    TODO: change this when upgrading to newer CommonUtils\n*/\nvar lightboxInfo = frameElement.lightboxInfo;\ndocument.spotlightInfo = lightboxInfo.data;\n\n\n\n\n// Make the ad and creative identifiable on IMDb and Amazon.\ndocument.ad = {\n    \n    \n        w: 940,\n        h: 600,\n        template: \"Spotlight Modal-3.22\"\n};\n\nwindow.aanResponse = {\n    adId: document.ad.aid,\n    creativeId: document.ad.cid,\n    \n    \n        // If shazamStage isn't 'production' then assign it to the\n        // aanResponse, otherwise, do nothing and clients looking for\n        // shazamStage will assume 'production' if no value is found.\n        shazamStage: 'prod',\n    \n    shazamId: '854220'\n};\n\n// If IMDb's \"ad_utils\" object exists, expand so the ad can be seen.\ntry {\n    if (parent && parent.ad_utils) {\n        parent.ad_utils.expand_ad(frameElement);\n    }\n}\ncatch (e) {\n    // Not inside a friendly iframe.\n}\n\n\n\n\n// Wrap it in a closure for better minification.\n(function(window, document, parent) {\ntry {\n    // Get some page elements that we'll need to use.\n    (function() {\n  /**\n   * Global Configuration\n   */\n  window.AD_DEBUG = true;\n  window.DADS = window.DADS || {};\n\n  /**\n   * Logger\n   */\n  function log() {\n    if (window.console && typeof window.console.log === 'function' && window.AD_DEBUG) {\n      var args = Array.prototype.slice.call(arguments, 0);\n      console.log.call(console, '[shazam:analytics-component] ' + args[0], args.slice(1));\n    }\n  }\n\n  /**\n   * Finds top-most link (anchor element) of a given element\n   * @param element  element whose top-most link is being searched\n   * @param @optional higestLevel  highest-level to climb in DOM tree (default = 2)\n   * @param @optional level  level to start in DOM tree (default = 0)\n   * @return Top-most anchor element in the DOM tree\n   */\n  function findTopLink(element, highestLevel, level) {\n    if (!element || !element.parentNode) return;\n\n    highestLevel = (typeof highestLevel === 'undefined') ? 2 : highestLevel;\n    level = (typeof level === 'undefined') ? 0 : level;\n    var parentElement = element.parentNode;\n    if (element.tagName === 'A') {\n      return element;\n    } else if (level < highestLevel) {\n      return findTopLink(parentElement, highestLevel, ++level);\n    }\n  }\n\n  /**\n   * Cross-browser method for listening for events on a DOM element\n   * @param  {HTMLElement} element\n   * @param  {String} eventName\n   * @param  {Function} listener\n   */\n  function bindEvent(element, eventName, listener) {\n    // Cross-browser event listener\n    var eventListener = function(e) {\n      // Cross-browser event\n      e = e || window.event;\n      \n      // Cross-browser event.preventDefault\n      e.preventDefault = e.preventDefault || function() {\n        e.returnValue = false;\n      };\n\n      // Cross-browser event.target\n      e.target = e.target || e.srcElement;\n\n      // Cross-browser event.stopPropagation\n      e.stopPropagation = e.stopPropagation || function() {\n        e.cancelBubble = true;\n      };\n\n      // Cross-browser event.which\n      if (!e.which) {\n        var buttonType = e.button;\n        if (buttonType !== 1) {\n          if (buttonType === 2) {\n            buttonType = 3;\n          } else if (buttonType === 4) {\n            buttonType = 2;\n          } else {\n            buttonType = 1;\n          }\n        }\n\n        e.which = buttonType;\n      }\n\n\n      // Cross-browser event.x & event.y\n      // TODO: Confirm this functionality. In Spotlight Modal (IE8), \n      // e.x and e.clientX return different values because e.x is relative \n      // to the last positioned ancestor element.\n      if (!e.x) e.x = e.clientX;\n      if (!e.y) e.y = e.clientY;\n\n      // Run event-listener in next tick\n      return listener(e);\n    };\n\n    // Special Case: Window OnLoad\n    if (element === window && document.readyState == 'complete') {\n      return listener();\n    }\n\n    // Cross-browser add event listener\n    if (element.addEventListener) {\n      element.addEventListener(eventName, eventListener, !0);\n    } else {\n      eventName = 'on' + eventName;\n      if (element.attachEvent)\n        element.attachEvent(eventName, eventListener);\n      else\n        element[eventName] = eventListener;\n    }\n  }\n\n  /**\n   * Tracks click on DOM element using Async Pixel technique described here:\n   * https://w.amazon.com/index.php/DA/CX/Click_Pixel_Tracking_Experiment\n   *\n   * @param {HTMLElement} element\n   * @param {String} clickTrackerUrl\n   * @param {Object} options (optional)\n   *   - @attribute {Integer} clickTrackerTimeout\n   *   			Amount of time to wait for clickTracker to fire. Defaults to 150 ms.\n   */\n  function track3PClickAsync(element, clickTrackerUrl, options) {\n    // Process Required params\n    if (!element || !clickTrackerUrl) {\n      return log('Error: Either element or clickTrackerUrl not provided to track3PClickAsync method');\n    }\n\n    // Process Optional params\n    options = options || {};\n    var clickTrackerTimeout = options.clickTrackerTimeout || 150;\n\n    // Checks if Element is a link\n    function isLink(el) {\n      var tagName = el.nodeName || el.tagName;\n      return typeof el !== 'undefined' && typeof el.href !== 'undefined' && /^a$/i.test(tagName);\n    }\n\n    // Checks if mouse-click was a right-click\n    function isRightClick(e) {\n      return e.which === 1;\n    }\n\n    // Mousedown handler for tracking\n    function onMouseDown(e) {\n      log('onMouseDown');\n\n      if (isLink(e.target) && isRightClick(e)) {\n        e.preventDefault();\n        log('ad-mousedown', e, e.which);\n        var trackingPixel = new Image();\n\n        function trackingPixelOnLoad(e) {\n          log('Tracking pixel done');\n        }\n\n        trackingPixel.onload = trackingPixelOnLoad;\n        trackingPixel.src = clickTrackerUrl;\n        log('Fired async pixel', clickTrackerUrl);\n      }\n    }\n\n    // Click handler for tracking\n    function onClick(e) {\n      log('ad-click', e);\n      var targetElement = e.target\n      linkTarget = targetElement.target;\n\n      if (isRightClick(e) && isLink(targetElement) && /_self|_top/ig.test(linkTarget)) {\n        log('link opens in same window. using async pixel delay.');\n        e.preventDefault();\n        var targetElementHref = targetElement.href;\n        setTimeout(function() {\n          log('Moving to next page', targetElementHref);\n          var $location;\n          try {\n            $location = parent.location;\n            log('Top location found. Moving to next page.');\n            window.open(targetElementHref, targetElement.target);\n          } catch (e) {\n            log('Cannot read parent. Likely to be in an iframe');\n            window.open(targetElementHref, '_blank');\n          }\n        }, clickTrackerTimeout);\n      }\n    }\n\n    // Bind both events\n    bindEvent(element, 'mousedown', onMouseDown);\n    bindEvent(element, 'click', onClick);\n  }\n\n  /**\n   * @module Analytics\n   * @namespace DADS.Analytics\n   */\n\n  DADS.Analytics = {\n    track3PClickAsync: track3PClickAsync\n  };\n\n})();\n\n    \n\n\nvar ON_AMAZON_PATTERN = /\\.amazon\\.com(:.*)?$/;\n\n/**\n * If IS_3P is defined, then store its value, otherwise we don't know if we're on a third party site.\n * IS_3P will not be defined within this context so minification will not minify it.\n * The IS_3P variable is only defined when Cornerstone serves this ad unit to a 3P site.\n *\n * We are assuming that the creative is on amazon if the iframe the creative is in\n * or the iframe in which the iframe of the creative is in has amazon domain.\n *\n * We assume this will work because anyone who properly uses our ads\n * will fall under the following categories:\n *\n * On Amazon:\n * Uses iframeproxy and could possibly have aax iframe within it that holds the content.\n *\n * O&O Subsidiaries:\n * Uses amazon scripts that inject into divs, no Amazon iframes (doesn't use iframeproxy).\n *\n * 3P:\n * Uses AAX iframe, so referrer isn't Amazon.\n *\n */\n\nvar knownToBeOnThirdParty = (typeof IS_3P !== 'undefined') && IS_3P;\n// If the parent iframe indicates we are on Amazon, this variable stores 'true',\n// but we may be on Amazon even if the parent doesn't indicate it.\nvar knownToBeOnAmazon = false;\n\nif (!knownToBeOnThirdParty) {\n    try {\n        knownToBeOnAmazon = ON_AMAZON_PATTERN.test(parent.location.host);\n    } catch (e) {\n        // Can't use parent object because it is forbidden in non-friendly iframes\n    }\n    var referrer = document.referrer;\n    // We may be able to know we're on amazon by using the referrer\n    if (!knownToBeOnAmazon && referrer) {\n        var regex = /^((?:https?:)\\/\\/)?([\\w\\-\\.]+(?::[0-9]+)?)\\/?(.*)$/;\n        var parts = referrer.match(regex);\n        var domain = parts[2];\n        knownToBeOnAmazon = ON_AMAZON_PATTERN.test(domain);\n    }\n}\n\n// This logic takes care of the case when we show ads on IMDB, Woot etc.\nvar knownToBeOnSubsidiary = !knownToBeOnThirdParty && !knownToBeOnAmazon;\n\n\n/**\n * Stub method used to for doing nothing with good minification.\n */\nvar DO_NOTHING = function(){};\n\n/**\n * Checks the given url and finds whether it is secure or not.\n * @method isSecure\n * @param url {String} protocol to check.\n * @return Returns true if protocol is secure, false otherwise.\n */\nvar isSecure = function(url) {\n    return (/s/.test(url.protocol));\n};\n\n/**\n * Checks the given url and finds whether is is an internal link or not.\n * @method isInternalUrl\n * @param url {String} Fully Qualified URL to check.\n * @return Return true if the url is internal to Amazon.com, false otherwise.\n */\nvar isInternalUrl = function(url) {\n    if(!url){ // No Url is treated as external\n        return false;\n    }else{\n        var regex = /^((?:https?:)\\/\\/)?([\\w\\-\\.]+(?::[0-9]+)?)\\/?(.*)$/;\n        var parts = url.match(regex);\n        var domain = parts[2];\n        return ON_AMAZON_PATTERN.test(domain);\n    }\n};\n\n/**\n * iterates over an array.\n * @method forEach\n * @param array {Array}\n * @return Does not return anything - applies callback for each element of the array.\n */\nvar forEach = function(array, callback) {\n    for (var index = 0, length = array.length; index < length; index++) {\n        callback(array[index], index, array);\n    }\n};\n\n/**\n * Return an element with a given ID.\n * @method getElementByID\n * @param id {String}\n * @return DOM Element with the given ID.\n */\nvar getElementById = function(id) {\n    return document.getElementById(id);\n};\n\n/**\n * Returns a query string from a query object\n * @method getQueryString\n * @param  {Object} query\n * @param  {Boolean} escapeResult\n * @return {String} query string\n */\nvar getQueryString = function(query, escapeResult) {\n    var queryStringParts = [];\n    for (var key in query) {\n        queryStringParts.push(key + '=' + query[key]);\n    }\n\n    var queryString = queryStringParts.join('&');\n    return escapeResult ? encodeURIComponent(queryString) : queryString;\n};\n\n/**\n * Perform a time-sensitive fade animation. Only one element can have the fade effect at one time.\n * @method fadeElement\n * @param element {Object} HTML element which will be faded in/out.\n * @param isIn {Boolean} Determines the fade direction in or out.\n * @param cb {Function} Callback function that will be called when animation ends.\n * @param fadeDuration {Number} Speed of the fade animation in milliseconds.\n * @return Does not return anything.\n */\nvar FADE_STEP = 25;\nvar FADE_DURATION = 300;\n\nvar fadeStart;\nvar fadeElement = function(element, isIn, cb, fadeDuration) {\n    element.style.visibility = 'visible';\n\n    var now = new Date();\n    fadeStart = fadeStart || now;\n    fadeDuration = fadeDuration || FADE_DURATION;\n    var opacity = Math.min((now - fadeStart) / fadeDuration, 1);\n    if(!isIn){\n        opacity = 1 - opacity;\n    }\n    setOpacity(element, opacity);\n    if ((isIn && opacity < 1) || (!isIn && opacity > 0)) {\n        setTimeout(function(){\n            fadeElement(element, isIn, cb, fadeDuration);\n        }, FADE_STEP);\n    } else {\n        // Clean the start time of the fade for the next fade effect.\n        fadeStart = null;\n        // Clean filter, otherwise, IE 6/7/8 displays the background of the ad.\n        element.style.filter = '';\n        if (cb) { cb(); }\n    }\n};\n\n/**\n * Set the opacity of a given element.\n * @method setOpacity\n * @param element {Object} - DOM element for which opacity has be to set\n * @param opacity {Number} \n * @return Does not return anything - sets the opacity of the element.\n */\nvar setOpacity = function(element, opacity) {\n    var style = element.style;\n    style.display = 'block';\n    style.opacity = style.mozOpacity = opacity;\n    style.filter = 'alpha(opacity=' + (opacity * 100) + ')';\n};\n\n/**\n * Set the background image of a given element.\n * @method setBackgroundImage\n * @param element {Object} - DOM element for which background has be to set\n * @param backgrounfImageUrl {String}\n * @return Does not return anything - sets the background of the element.\n */\nvar setBackgroundImage = function(element, backgroundImageUrl) {\n    element.style.backgroundImage = 'url(' + backgroundImageUrl + ')';\n};\n\n/**\n * Set the href of a given element (and give it a target).\n * @method setHref\n * @param element {Object} - DOM element for which href and target have to be set\n * @param href {String}\n * @return Does not return anything - sets the href and target for the given element.\n */\nvar setHref = function(element, href) {\n    element.href = href;\n    // For Third Party Sites or Amazon Subsidiaries, target to a blank tab, otherwise target to the parent page.\n    element.target = (knownToBeOnThirdParty || knownToBeOnSubsidiary) ? \"_blank\" : \"_top\";\n};\n/**\n * Set the href of each given element in the array of elements (and give them a target).\n * @method setHrefs\n * @param element {Array} - DOM elements for which href and target have to be set\n * @param href {String}\n * @return Does not return anything - sets the href and target for the given elements.\n */\nvar setHrefs = function(list, href) {\n    forEach (list, function(item) { setHref(item, href); });\n};\n\n/**\n * Sets one or more style attributes for an element\n * @param {Object} element    DOM element to set the style attributes on\n * @param {Object} attributes Style attributes hash map to be set on the DOM element\n */\nvar setStyle = function(element, attributes) {\n    for (var key in attributes) {\n        element.style[key] = attributes[key];\n    }\n};\n\n/**\n * Checks if the element has a given class.\n * @method hasClass\n * @param elem {Object} - DOM element for which we are checking the class\n * @param cls {String} - Name of the class\n * @return returns Boolean.\n */\nvar hasClass = function(elem, cls) {\n    return elem.className.match(new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)'));\n};\n\n/**\n * Adds class to a given element.\n * @method addClass\n * @param elem {Object} - DOM element for which to add class\n * @param cls {String} - Name of the class\n * @return Does not return anything. Adds class to the given element.\n */\nvar addClass = function(elem, cls) {\n    if (!hasClass(elem, cls))\n        elem.className += \" \" + cls;\n};\n\n/**\n * Removes class of a given element.\n * @method removeClass\n * @param elem {Object} - DOM element for which to remove the class\n * @param cls {String} - Name of the class\n * @return Does not return anything. Removes class from the given element.\n */\nvar removeClass = function(elem, cls) {\n    if (hasClass(elem, cls)) {\n        var reg = new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)');\n        elem.className = elem.className.replace(reg, ' ');\n    }\n};\n\n/**\n * Show element.\n * @method show\n * @param elem {Object} - DOM element to be made visible\n * @return Does not return anything. Makes element visible.\n */\nvar show = function(elem) {\n    removeClass(elem, 'hide');\n};\n\n/**\n * Hide element.\n * @method hide\n * @param elem {Object} - DOM element to hide\n * @return Does not return anything. Hides the element.\n */\nvar hide = function(elem) {\n    addClass(elem, 'hide');\n};\n\n// We want to wait for both the parent window and this iframe window to\n// load - track them in a counter.\nvar windowOnloadsToWaitFor = 0;\n\n/**\n * Cross-browser window onload event binding.\n * @method bindWindowOnload\n * @return Does not return anything.\n */\nvar bindWindowOnload = function(windowObject, callback) {\n    try {\n        if (windowObject.document.readyState == 'complete') {\n            callback();\n        }\n        else if (windowObject.addEventListener) {\n            windowObject.addEventListener('load', callback, true);\n        }\n        else if (windowObject.attachEvent) {\n            windowObject.attachEvent('onload', callback);\n        }\n        // The callback (onloadHandler) waits for non-zero milliseconds\n        // before decrementing, so this will increment first.\n        windowOnloadsToWaitFor++;\n    }\n    catch (e) {\n        // If the windowObject is a different-domain parent, we can't\n        // interact with it.\n    }\n};\n\n// Waiting 10ms reduces interference with other window.onload laziness\n// (such as uedata requests).\nvar LAZY_LOAD_DELAY = 10;\n\n/**\n * Lazily load stuff some time after all required onload events have fired.\n * @method onloadHandler\n * @return Does not return anything.\n */\nvar onloadHandler = function() {\n    setTimeout(function() {\n        windowOnloadsToWaitFor--;\n        if (!windowOnloadsToWaitFor) {\n            lazyLoad();\n        }\n    }, LAZY_LOAD_DELAY);\n};\n\n/**\n * Attach an event listener to an element\n * @method bindEvent\n * @param element {Object} - DOM element\n * @param event {String} - Event to bind to\n * @param listener {Function} - Listener to bind\n * @return Does not return anything.\n */\nvar bindEvent = function(element, eventName, listener) {\n    if(element) {\n        // Cross-browser event listener\n        var eventListener = function(e) {\n            // Cross-browser event\n            e = e || window.event;\n\n            // Cross-browser event.preventDefault\n            e.preventDefault = e.preventDefault || function() {\n                e.returnValue = false;\n            };\n\n            // Cross-browser event.target\n            e.target = e.target || e.srcElement;\n\n            // Cross-browser event.stopPropagation\n            e.stopPropagation = e.stopPropagation || function() {\n                e.cancelBubble = true;\n            };\n\n            // Cross-browser event.which\n            if (!e.which) {\n                var buttonType = e.button;\n                if (buttonType !== 1) {\n                    if (buttonType === 2) {\n                        buttonType = 3;\n                    } else if (buttonType === 4) {\n                        buttonType = 2;\n                    } else {\n                        buttonType = 1;\n                    }\n                }\n\n                e.which = buttonType;\n            }\n\n            // Cross-browser event.x & event.y\n            // TODO: Confirm this functionality. In Spotlight Modal (IE8),\n            // e.x and e.clientX return different values because e.x is relative\n            // to the last positioned ancestor element.\n            if (!e.x) e.x = e.clientX;\n            if (!e.y) e.y = e.clientY;\n\n            // Run event-listener in next tick\n            return listener(e);\n        };\n\n        // Special Case: Window OnLoad\n        if (element === window && document.readyState == 'complete') {\n            return listener();\n        }\n\n        // Cross-browser add event listener\n        if (element.addEventListener) {\n            element.addEventListener(eventName, eventListener, !0);\n        } else {\n            eventName = 'on' + eventName;\n            if (element.attachEvent) {\n                element.attachEvent(eventName, eventListener);\n            } else {\n                element[eventName] = eventListener;\n            }\n        }\n    }\n};\n\n/**\n * Trims leading and trailing spaces of a text. \n * Older versions of IE does not support String trim() function.\n * @method trimText\n * @return {String} Returns trimmed text.\n */\nvar trimText = function(text) {\n    return text.replace(/^\\s+|\\s+$/, '');\n};\n\n/**\n * Gets the value of the simulation with the given name.\n * If it doesn't exist or is not accessible, the defaultValue will be returned.\n * @method getSimulationValue\n * @return {String} Returns trimmed text.\n */\nvar getSimulationValue = function(simulationName, defaultValue) {\n    return (parent && parent.sim && parent.sim[simulationName]) ? parent.sim[simulationName] : defaultValue;\n};\n\n/**\n * Makes a call to the provided endpoint with exponential backoff retry.\n * If the service call times out, a retry will be attempted until the\n * maximum number of times of requests is reached.\n * @method callService\n * @param endpoint {String}\n *          The service's available endpoint.\n *          This is what precedes the '?' character and\n *          is preceded by the protocol and '//' characters in the URI.\n *          EG: www.amazon.com/aan/\n *\n * @param params {Object}\n *          The argument-value pairs that are passed to the service.\n *          This should be a flat JSON object, which is converted to a key-value list string\n *          that is preceded by the '?' character in the URI.\n *          EG: {Operation:\"ping\"} -> Operation=ping\n *          or: {\"Operation\":\"getElementById\",\"id\":\"1000\"} -> Operation=getElementById&id=1000\n *\n * @param maximumTryCount {Number}\n *          The maximum number of times the service call should happen. Should be an integer.\n *          The total number of calls can be less than this, since calls will stop\n *          being created once the first successful callback occurs.\n *          EG: 2\n *\n * @param retryTimeInMS {Number}\n *          The time to wait in milliseconds until the second call is made.\n *          For every successive call after the second call, this number is set to the product of itself and the exponentialBackoffCoefficient.\n *          EG: 1000\n *\n * @param exponentialBackoffCoefficient {Number}\n *          The value by which the retryTimeInMS increases with each retry.\n *          The n'th retry (or the (n-1)th try) will have retryTimeInMS = retryTimeInMS*(exponentialBackoffCoefficient^n).\n *          EG: 1.5, 2\n *\n * @param successCallback {Function}\n *          The callback that is called in the case of response success.\n *          The function will be called with the first parameter being the jsonp response object.\n *          EG: function(response) {console.log(\"Response:\", response);}\n *\n * @param failureCallback {Function} {optional}\n *          The callback that is called in the case of response failure after maximumTryCount tries.\n *          The function will be called with no parameters.\n *          EG: function() {alert(\"No response!\");}\n *\n * @return Does not return anything.\n */\nvar callService = function(endpoint, params, maximumTryCount, retryTimeInMS, exponentialBackoffCoefficient, successCallback, failureCallback) {\n    var callbackName = 'serviceCallback';\n    var numTries = 0;\n    params[\"JSONCallBack\"] = callbackName;\n    \n    if(typeof ClientMetrics !== 'undefined') {\n        ClientMetrics.startTimer(ClientMetrics.events.AAN_TIME);\n    }\n    \n    window[callbackName] = function(jsonResponseObj) {\n        // When the response is received, make sure the request isn't made again.\n        // This can happen when the first response returns slowly, after the another retry attempt has been made.\n        maximumTryCount = -1;\n        // If the second response comes after the first response, make sure the callback doesn't occur twice.\n        failureCallback = window[callbackName] = DO_NOTHING;\n        \n        if(typeof ClientMetrics !== 'undefined') {\n            ClientMetrics.endTimer(ClientMetrics.events.AAN_TIME);\n            ClientMetrics.logEvent(ClientMetrics.events.NUM_AAN_CALLS, numTries);\n        }\n        \n        successCallback(jsonResponseObj);\n    };\n    \n    \n    (function request() {\n        if (maximumTryCount > 0) {\n            var callScript = document.createElement('script');\n            callScript.src = '//' + endpoint + '?' + getQueryString(params);\n            document.body.appendChild(callScript);\n            maximumTryCount--;\n            numTries++;\n            setTimeout(request, retryTimeInMS);\n            // Exponentially back-off the retries.\n            retryTimeInMS *= exponentialBackoffCoefficient;\n        }\n        // If maximumTryCount has been decremented to 0, and no response has happened, and failureCallback exists, then call the failure callback.\n        // If the response has been recieved, maximumTryCount will be -1, which converts to true, so !(-1) is false.\n        else if (!maximumTryCount && failureCallback) {\n            failureCallback();\n            if(typeof ClientMetrics !== 'undefined') {\n                ClientMetrics.addMetric(ClientMetrics.events.FINAL_STATE, 'aanFail');\n                ClientMetrics.addMetric(ClientMetrics.events.NUM_AAN_CALLS, numTries);\n                ClientMetrics.flushMetrics();\n            }\n        }\n    })();\n    \n};\n\n\n\n    \n\n\nvar BACKGROUND_CLICK_TRAFFIC_EVENT_TYPE = 'adBackgroundClick';\nvar TITLE_CLICK_TRAFFIC_EVENT_TYPE = 'adTitleClick';\nvar ATC_CLICK_TRAFFIC_EVENT_TYPE = 'addToCartClick';\nvar SHOP_NOW_CLICK_TRAFFIC_EVENT_TYPE = 'shopNowClick';\nvar PREORDER_CLICK_TRAFFIC_EVENT_TYPE = 'preorderClick';\nvar CLIP_COUPON_CLICK_TRAFFIC_EVENT_TYPE = 'clipCouponClick';\nvar MORE_INFO_CLICK_TRAFFIC_EVENT_TYPE = 'moreInfoClick';\nvar READ_ALL_REVIEWS_CLICK_TRAFFIC_EVENT_TYPE = 'readAllReviewsClick';\nvar PRIMARY_CTA_CLICK_TRAFFIC_EVENT_TYPE = 'primaryCtaClick';\nvar ALTCTA_CLICK_TRAFFIC_EVENT_TYPE = 'altCtaClick';\nvar LEARN_MORE_TRAFFIC_EVENT_TYPE = 'learnMore';\n\n// Internal Metrics Clicks\nvar CLOSE_MODAL_EVENT_TYPE = 'closeModalClick';\n\nvar SIS_PROTOCOL = 'ANY';\nvar SIS_DOMAIN = 's.amazon-adsystem.com';\nvar SIS_BASE_URL = (SIS_PROTOCOL === 'ANY' ? location.protocol : SIS_PROTOCOL) + '//' + SIS_DOMAIN + '/click';\n\n\n    var THIRD_PARTY_TRACKER = '';\n\n\n\n\n\n\n\n\n\n\n\n\nvar adId = document.spotlightInfo.aid;\nvar creativeId = document.spotlightInfo.cid;\nvar adServer = document.spotlightInfo.adServer;\nvar impressionId = document.spotlightInfo.impId;\n\n    \n/**\n * Form SIS/Forester click tracker URL. Returns a pixel if redirect is null.\n * @method getClickTracker\n * @return returns tracking url\n */\nvar getClickTracker = function(eventType, redirectURL, signature) {\n    var foresterArgs = {\n        i: impressionId,\n        e: eventType,\n        a: adId,\n        c: creativeId,\n        s: adServer\n    };\n\n    var query = {\n        d: 'forester-did',\n        'ex-fargs': encodeURIComponent('?' + getQueryString(foresterArgs)),\n        'ex-fch': 416719,\n        rd: (redirectURL ? encodeURIComponent(redirectURL) : ''),\n        cb: new Date().getTime()\n    };\n    \n    // SIS Signature support\n    if(redirectURL && signature) { \n        query.sig=signature;\n    }\n    \n    var trackingURL = (SIS_PROTOCOL === 'ANY' ? location.protocol : SIS_PROTOCOL) + '//' + SIS_DOMAIN + (redirectURL ? '/click' : '/iui3') + '?' + getQueryString(query);\n\n    return trackingURL;\n};\n\n/**\n * Helper to set tracker as the HREF\n * @method setTrackerHref\n */\nvar setTrackerHref = function(element, event, redirectURL, signature) {\n    setHref(element, getClickTracker(event, redirectURL, signature));\n};\n\nvar getAmgRefTag = function() {\n    var siteInformation;\n    var slot;\n    var ad;\n\n    try {\n        slot = frameElement.parentNode;\n        ad = slot.ad;\n    } catch (err) {\n        // Unable to access iframe's parent. Could be inline iframe or off-amazon\n    }\n\n    if (ad && ad.a) {\n        siteInformation = ad.a;\n    } else {\n        siteInformation = {};\n        try {\n            var params = frameElement.a.split(';');\n            for (var i = 0; i < params.length; i++) {\n                var pair = params[i].split('=');\n                siteInformation[pair[0]] = pair[1];\n            }\n        } catch (err) {\n            // Unable to find site information - we could be unfriendly-iframed or off Amazon\n            // noop - log a metric if you can\n        }\n    }\n\n    var siteId = formatRefTagParam(siteInformation.site);\n    var pageType = formatRefTagParam(siteInformation.pt);\n    var slotName = formatRefTagParam(siteInformation.slot);\n    // Detect if the ad id macro has been expanded and use 'na' if not\n    var refTagAdId = adId.match(/%\\w+!|\\{%\\w+\\}/) ? 'na' : adId;\n    return 'ref=amg_' + siteId + '_' + refTagAdId + '_' + pageType + '_' + slotName;\n};\n\nvar formatRefTagParam = function (param) {\n    return (param || 'na').replace(/[^\\w]/gi, '').toLowerCase();\n};\n\nvar getAmgMobileRefTag = function() {\n    var refTag = 'ref=amg_mobile_';\n    var suffix = '_940x600/';\n\n    if (knownToBeOnThirdParty || isSimulate3P) {\n        return refTag + 'AMAN' + suffix;\n    }\n\n    \n        return refTag + (isMShop ? 'shopping' : 'AMAN') + suffix;\n    \n};\n\n\n\n    /**\n * Set of metric capturing functions. Logs a set of default metrics\n * such as ad id, creative id, impression id\n * with calls to startMetrics.\n *\n * Metrics Documentation: https://w.amazon.com/index.php/DA/CX/CO/ShazamMetrics\n * Additional ability to log timing metrics using startTimer, endTimer, addTimer\n *\n * Example usage:\n *      ClientMetrics.startMetrics();\n *      // code\n *      ClientMetrics.logMetric('finalState', 'fallback-aanError');\n *      //code\n *      ClientMetrics.addTimer('backgroundLoad');\n *      //code\n *      ClientMetrics.startTimer('aanResponseLoad');\n *      ClientMetrics.endTimer('aanResponseLoad');\n *\n *\n * NOTE : Template including this component should include CommonUtils - helpers.js , trackers.js\n */\n\n\n\nvar ClientMetrics = function(){\n    var ClientMetrics = {\n        events: {\n            BACKGROUND_TIME: 'backgroundLoadTime',\n            NUM_AAN_CALLS: 'aanCalls',\n            AAN_TIME: 'aanTime',\n            FINAL_STATE_TIME: 'finalStateTime',\n            FINAL_STATE: 'finalState',\n            DISPLAYED_PROMO: 'displayedPromo'\n        }\n    };\n\n    var NO_OP = function(){};\n    ClientMetrics.logEvent = NO_OP;\n    ClientMetrics.startTimer = NO_OP;\n    ClientMetrics.endTimer = NO_OP;\n    ClientMetrics.timeFromStart = NO_OP;\n    ClientMetrics.addMetric = NO_OP;\n    ClientMetrics.flushMetrics = NO_OP;\n\n    return ClientMetrics;\n}();\n    \n\n\n\n\n\n\n\n//\n// Add a button to a creative.  The button consist of a main image, a hover image, and a click URL.\n//\n// The hover image and the click URL are optional.  If they're either null or\n// a blank string, they will be ignored.  The width and height are the width and height of each image.  If\n// either one is greater than the maximum, it will be cropped.  The main image and hover image are required\n// to be the same size.\n//\n// Arguments:\n//    elem -- the element to which the button is added as a child\n//    mainImageUrl -- the URL of the main image\n//    hoverImageUrl -- the URL of the optional hover image.\n//    width -- the width of each image\n//    height -- the height of each image\n//    maxWidth -- the maximum width of each image\n//    maxHeight -- the maximum height of each image\n//    clickUrl -- the URL to which the user is taken when the button is clicked.\n//    clickEventType -- the click tracker event type that is added to the URL\n//    forceNewTab -- override the default behavior and force the click to open the new page in a new tab\n//    signature -- SIS redirect signature to override URL whitelist\n//\nvar addButton = function(elem, mainImageUrl, hoverImageUrl, width, height, maxWidth, maxHeight,\n                         clickUrl, clickEventType, forceNewTab, signature) {\n    // Create the link.\n    var button = document.createElement('a');\n    button.className = \"button\";\n    elem.appendChild(button);\n\n    // Set up the main image.\n    var img = new Image();\n    img.src = mainImageUrl;\n    button.appendChild(img);\n\n    // Set permanent styling for the button.\n    elem.style.width = ((width < maxWidth) ? width : maxWidth ) + 'px';\n    elem.style.height = ((height < maxHeight) ? height : maxHeight) + 'px';\n    elem.style.overflow = \"hidden\";\n\n    // If there is also a hover image, then we want to switch to it on mouseover.\n    if ((hoverImageUrl) && (hoverImageUrl.length > 0)) {\n        // Preload the image so that it's in the cache for the first mouseover.\n        (new Image()).src = hoverImageUrl;\n\n        // Setup the event handlers.\n        img.onmouseover = function() {img.src = hoverImageUrl;};\n        img.onmouseout = function() {img.src = mainImageUrl;};\n    }\n\n    // If there is a click URL, set it up.\n    if ((clickUrl) && (clickUrl.length > 0)) {\n        setHref(button, getClickTracker(clickEventType, clickUrl, signature));\n        if (forceNewTab) {\n            button.target = \"_blank\";\n        }\n    }\n}\n\n//\n// Add a button to a creative.  The button consist of a sprite image and a click URL.\n//\n// The click URL is optional.  If it's either null or a blank string, it will be ignored.  The\n// width and height are the width and height of each part of the sprite image.  If either one\n// is greater than the maximum, it will be cropped.  Both images that make up the sprite are\n// required to be the same size.\n//\n// Arguments:\n//    elem -- the element to which the button is added as a child\n//    imageUrl -- the URL of the sprite image\n//    width -- the width of each image\n//    height -- the height of each image\n//    padding -- the number of pixels of padding between the images in the sprite\n//    maxWidth -- the maximum width of each image\n//    maxHeight -- the maximum height of each image\n//    clickUrl -- the URL to which the user is taken when the button is clicked.\n//    clickEventType -- the click tracker event type that is added to the URL\n//    forceNewTab -- override the default behavior and force the click to open the new page in a new tab\n//    signature -- SIS redirect signature to override URL whitelist\n//\nvar addSpriteButton = function(elem, imageUrl, width, height, padding, maxWidth, maxHeight,\n                               clickUrl, clickEventType, forceNewTab, signature) {\n    // Create the link.\n    var button = document.createElement('a');\n    button.className = \"button\";\n    elem.appendChild(button);\n\n    // Set up the sprite.\n    var img2Start = height + padding;\n    elem.style.background = \"url('\" + imageUrl + \"')\";\n\n    // Set permanent styling for the button.\n    button.style.width = ((width < maxWidth) ? width : maxWidth) + 'px';\n    button.style.height = ((height < maxHeight) ? height : maxHeight) + 'px';\n    button.style.position = \"absolute\";\n    elem.style.width = button.style.width;\n    elem.style.height = button.style.height;\n    elem.style.overflow = \"hidden\";\n\n    // Set up the event handlers.\n    elem.onmouseover = function() {elem.style.backgroundPosition = \"0 -\" + img2Start + \"px\";};\n    elem.onmouseout = function()  {elem.style.backgroundPosition = \"0 0\"};\n\n    // If there is a click URL, set it up.\n    if ((clickUrl) && (clickUrl.length > 0)) {\n        setHref(button, getClickTracker(clickEventType, clickUrl, signature));\n        if (forceNewTab) {\n            button.target = \"_blank\";\n        }\n    }\n}\n\n\n\n    /**\n     * Link the background element to the destination URL and append click tracker\n     */\n    function setBackgroundLink(element, destination, signature) {\n        var bgClickTracker = getClickTracker(BACKGROUND_CLICK_TRAFFIC_EVENT_TYPE, destination, signature);\n        setHref(element, bgClickTracker);\n        element.target = !isInternalUrl(destination) ? '_blank' : '_top';\n    }\n\n    var spotlightAd = getElementById('spotlightAd');\n\n    var MEDIA_URL = (isSecure(location) ? '//images-na.ssl-' : '//g-ecx.') + \n                    'images-amazon.com/images/G/01/';\n    var cta1SpriteImage = '';\n    var cta1SpriteImageFullURL = MEDIA_URL + cta1SpriteImage;\n    var cta1SpritePadding = parseInt('' || '0', 10);\n    var cta1MainImage = '';\n    var cta1MainImageFullURL = MEDIA_URL + cta1MainImage;\n    var cta1HoverImage = '';\n    var cta1HoverImageFullURL = MEDIA_URL + cta1HoverImage;\n    var cta1Top = parseInt('450' || '0', 10);\n    var cta1Left = parseInt('650' || '0', 10);\n    var cta1Width = parseInt('' || '0', 10);\n    var cta1Height = parseInt('' || '0', 10);\n    var cta1MaxWidth = parseInt('9999' || '0', 10);\n    var cta1MaxHeight = parseInt('9999' || '0', 10);\n    var cta1Click = '';\n    var cta1ClickSig = '3d517a0fd19c15a8d710f2071d3629baade8a3396a3b166b45f1c71aec5c1fbf';\n    var cta2SpriteImage = '';\n    var cta2SpriteImageFullURL = MEDIA_URL + cta2SpriteImage;\n    var cta2SpritePadding = parseInt('1' || '0', 10);\n    var cta2MainImage = 'shazam/30026-Modal-BTN-1xGfhE._V322397519_.jpg';\n    var cta2MainImageFullURL = MEDIA_URL + cta2MainImage;\n    var cta2HoverImage = '';\n    var cta2HoverImageFullURL = MEDIA_URL + cta2HoverImage;\n    var cta2Top = parseInt('324' || '0', 10);\n    var cta2Left = parseInt('750' || '0', 10);\n    var cta2Width = parseInt('95' || '0', 10);\n    var cta2Height = parseInt('27' || '0', 10);\n    var cta2MaxWidth = parseInt('9999' || '0', 10);\n    var cta2MaxHeight = parseInt('9999' || '0', 10);\n    var cta2Click = 'https://ad.doubleclick.net/ddm/clk/285199949;106604896;f';\n    var cta2ClickSig = '9495f75fdc64c301e4abb6df3841dd4cc80c9c1d38b5eba04b59b02c921aea5c';\n    var async3pClickTracker = '';\n    var shouldLinkBackgroundToAltCta = false;\n\n    getElementById('spotlightFeedback').src = MEDIA_URL + 'da/creatives/AdLink_Dark._V369873372_.png';\n    \n    setBackgroundImage(getElementById('spotlightCloseButton'), MEDIA_URL + 'da/creatives/CloseBtn_Light._V369873314_.png');\n    \n    \n        // Set the background image to the media URL\n        setBackgroundImage(spotlightAd, MEDIA_URL + 'shazam/30026-Modal-940x600-1xJyuB._V321088532_.jpg');\n    \n        \n    \n    \n    \nfunction Video(isChromeless, hasPostSlate) {\n    var video = this;\n\n    \n\n    /**\n     * Loads the script url and calls the callback when script is loaded.\n     * @method loadScript\n     * @param url {String} - script url\n     * @param callback {Function} - function to callback once script is loaded\n     * @return - does not return anything\n     */\n    function loadScript(url, callback) {\n        var script = document.createElement('script');\n\n        //For IE\n        if (script.readyState) {\n            script.onreadystatechange = function() {\n                if (script.readyState == \"loaded\" || script.readyState == \"complete\") {\n                    script.onreadystatechange = null;\n                    callback();\n                }\n            };\n        }\n        //All other browsers\n        else {\n            script.onload = function() {\n                callback();\n            };\n        }\n\n        script.src = url;\n        document.getElementsByTagName('head')[0].appendChild(script);\n    };\n\n    /**\n     * Loads an external style sheet\n     * @method loadStyle\n     * @param url {String} - stylesheet url\n     * @return - does not return anything\n     */\n    function loadStyle(url) {\n        var style = document.createElement('link');\n        style.setAttribute('rel', 'stylesheet');\n        style.href = url;\n        document.getElementsByTagName('head')[0].appendChild(style);\n    };\n\n    /**\n     * Prefetches an external file the user might use in the near future\n     * @method prefetchUrl\n     * @param url {String} - file url to preload\n     * @return - does not return anything\n     */\n    function prefetchUrl(url) {\n        var prefetchFile = document.createElement('link');\n        prefetchFile.setAttribute('rel', 'prefetch');\n        prefetchFile.href = url;\n        document.getElementsByTagName('head')[0].appendChild(prefetchFile);\n    };\n\n    var getMediaUrls = function (path) {\n        var url = location.protocol + \"//\" + path;\n        return [url + '.webm', url + '.mp4', url + '.ogv'];\n    };\n\n    // Fix the protocol relative URL issue when using Flash version of Airy Player\n    // TODO: Do we need this?  MEDIA_URL is not protocol relative in all templates\n    //   I do not think we should modify globals like this\n    var videoProtocol;\n\n    if(isSecure(location)) {\n        videoProtocol = 'https:';\n    } else {\n        videoProtocol = 'http:';\n    }\n    MEDIA_URL = MEDIA_URL.substr(0,2) == '//' ? videoProtocol + MEDIA_URL : MEDIA_URL;\n\n    // iPad/iPhone/Kindle\n    var isMobile = /Mobile.*Safari|Silk|Android/.test(navigator.userAgent);\n\n    // Video Player related constants.\n    // Same media central location across all locales.\n    // ._TTW_ is added before the final suffix (e.g., .js, .css) in all of our Media Central URLs so that the asset is cached by the browser for a week\n    var AIRY_VERSION_NAMESPACE = (isSecure(location) ? '//images-na.ssl-' : '//g-ecx.') + 'images-amazon.com/images/G/01/vap/video/airy2/prod/2.0.678.0/';\n    var AIRY_JS = AIRY_VERSION_NAMESPACE + 'js/airy' + ((isChromeless && !isMobile) ? '.chromeless' : '.skin') + '._TTW_.js';\n    var AIRY_SWF = AIRY_VERSION_NAMESPACE + 'flash/AiryBasicRenderer._TTW_.swf';\n    var AIRY_SKIN_CSS = AIRY_VERSION_NAMESPACE + 'css/beacon._TTW_.css';\n\n    var DESIRED_MODE = \"hybrid\";\n    // Targeting Safari and IE10 to use html video instead of flash, due to outstanding issues with Airy and Spotlight\n    if (navigator.userAgent.search(\"Safari\")>=0 && navigator.userAgent.search(\"Chrome\")<0){\n        DESIRED_MODE = \"html\";\n    }\n    var VIDEO_REGION = \"na\" || \"na\";\n    if (VIDEO_REGION == \"jp\") {\n        VIDEO_REGION = \"fe\";\n    }\n\n    // Elements\n    var $videoContainer = getElementById('videoContainer');\n    var $video = getElementById('video');\n    \n    \n        var $posterImage = getElementById('posterImage');\n    \n\n    // This holds the instance of Airy\n    var playerInstance;\n    \n    /**\n     * Loads player.\n     * @param isDiscreet {Boolean} - Set if video should play now without audio (and a hint to play with audio) - Defaults to true\n     * @param isAutoplay {Boolean} - Set if video should play now\n     * @param videoUnsupportedCallback {Function} - Called when video can't be played\n     * @param playerCallback {Function} - Called when video can be played\n     * @param autoplayCutOffTimeSeconds - {Number} - Number of seconds for discreet play - Defaults to 15 seconds\n     */\n    video.initialize = function(path, isDiscreet, isAutoplay, videoUnsupportedCallback, playerCallback, videoIndex, autoplayCutOffTimeSeconds) {\n        if (video.isInitialized()) {\n            throw new Error('Video already initialized');\n        }\n        \n        // Discreet play is the default\n        if (typeof isDiscreet == 'undefined') {\n            isDiscreet = true;\n        }\n\n        // Clean up previous instance if necessary\n        if (playerInstance) {\n            video.unload();\n        }\n\n        // Check if Eikooc's are supported - We don't do discreet play if not.\n        // User shouldn't see the same ad in discreet mode more than once a day.\n        // This frequency cap is not applied to ad preview.\n        \n\n        // Embed the player and then play if all the following are true.\n        // 1. Autoplay is true\n        // 2. Player is chromeless, or is not muted (autoplay chromeless regardless of sound choice)\n        // 3. Player is not on mobile\n        var willCallPlay = isAutoplay && (!isDiscreet || isChromeless) && !isMobile;\n        \n        \n            if(isAutoplay && !isMobile && !hasPostSlate) { // If the video is meant to autoplay, do not show the posterImage before it loads\n                $posterImage.style.display = 'none';\n            }\n            // Always set the background image as video unsupported fallback\n            $posterImage.style.backgroundImage = 'url(' + MEDIA_URL + 'shazam/30026-Poster-1xGeZ8._V322404043_.jpg)';\n        \n        // Input params for video player\n        var playerInput = {\n            parentElement: $video,\n            swfUrl: AIRY_SWF,\n            flashVars: {\n                bufferTimeSeconds: 2\n            },\n            streamingUrls: getMediaUrls(path),\n            // If we want to play with audio, we will call play explicitly rather than set isAutoplayEnabled\n            // This is only set if we want to play discreetly, and doesn't work on mobile\n            // Chromeless Airy doesn't support discreet playback\n            isAutoplayEnabled: isAutoplay && isDiscreet && !isMobile && !isChromeless,\n            // Shouldn't show the start hint, because we are about to play immediately\n            shouldPlayHintStartHidden: willCallPlay,\n            autoplayCutOffTimeSeconds: autoplayCutOffTimeSeconds || 15,\n            displayAdsForesterParams: {\n                i: impressionId,\n                a: adId,\n                c: creativeId,\n                s: adServer\n            },\n            disabledViewIds: (isMobile && isChromeless) ? ['containerBottom', 'replayHint'] : ['screenSizeToggle'],\n            environmentStage: 'prod',\n            regionCode: VIDEO_REGION,\n            desiredMode: DESIRED_MODE,\n            isInstallFlashDialogDisabled: true,\n            isForesterTrackingDisabled: true,\n            \n                slateImages: {\n                    preloadSlate: $posterImage,\n                    postMediaSlate: hasPostSlate ? $posterImage : undefined\n                },\n            \n            bindings: {\n                canplay: function(eventObj, eventContext) {\n                    \n                    if (!isDiscreet) {\n                        playerInstance.audioOn();\n                    }\n                    if (typeof playerCallback == 'function') {\n                        playerCallback(eventObj, eventContext);\n                    }\n                },\n                videounsupported: function(eventObj, eventContext) {\n                    if (typeof videoUnsupportedCallback == 'function') {\n                        videoUnsupportedCallback(eventObj, eventContext);\n                    }\n                },\n                ended: function(eventObj, eventContext) {\n                    if (isChromeless && hasPostSlate) {\n                        if(isMobile) {\n                            // On mobile, redirect users to CTA after the video finishes. https://tt.amazon.com/0037992401\n                            show($posterImage);\n                            addClass(getElementById('link'), 'fullHeightLink');\n                        } else {\n\n                            // Hide everything but the poster image, because Airy doesn't do this for us in chromeless mode\n                            var videoElement = $video.firstChild;\n                            while (videoElement) {\n                                if (videoElement.id != 'posterImage') {\n                                    if (typeof videoElement.className != 'undefined') {\n                                        hide(videoElement);\n                                    }\n                                }\n                                videoElement = videoElement.nextSibling;\n                            }\n                            if(hasPostSlate) {\n                                show($posterImage);\n                            }\n                        }\n                    } \n                }\n            }\n        };\n        if (!(isChromeless && !isMobile)) {\n            loadStyle(AIRY_SKIN_CSS);\n        }\n        prefetchUrl(AIRY_SWF);\n        loadScript(AIRY_JS, function() {\n            playerInstance = Airy.embed(playerInput);\n            playerInstance.audioOff();\n            if (videoIndex) {\n                playerInstance.setDisplayAdsMetricEventNameSuffix((videoIndex ? videoIndex + 1 : '').toString());\n            }\n            if (willCallPlay) {\n                // Call play immediately after embed to show the spinner as early as possible\n                playerInstance.play();\n            }\n        });\n    };\n\n    video.pause = function() {\n        if (playerInstance) {\n            playerInstance.pause();\n        }\n    };\n\n    video.play = function() {\n        if (playerInstance) {\n            playerInstance.play();\n        }\n    };\n\n    video.replay = function() {\n        if (playerInstance) {\n            playerInstance.replay();\n        }\n    };\n\n    video.changeVideoAndPlay = function(path, videoIndex) {\n        var urls = getMediaUrls(path);\n        if (playerInstance) {\n            playerInstance.setDisplayAdsMetricEventNameSuffix((videoIndex ? videoIndex + 1 : '').toString());\n            video.pause();\n            playerInstance.loadMedia({mediaSourceInfo:urls});\n            playerInstance.audioOn();\n            video.play();\n        }\n        return !!playerInstance;\n    };\n    \n    video.unload = function() {\n        if (playerInstance) {\n            playerInstance.detach();\n            playerInstance = null;\n            \n                \n                $video.appendChild($posterImage);\n            \n        }\n    };\n\n    video.show = function() {\n        if (playerInstance) {\n            playerInstance.show();\n        }\n    }\n\n    video.hide = function() {\n        if (playerInstance) {\n            playerInstance.hide();\n        }\n    }\n    \n    video.isInitialized = function() {\n        return !!playerInstance;\n    }\n    \n    video.addCuePoint = function(callback, values, type) {\n        if (!video.isInitialized()) {\n            throw new Error('Video not initialized');\n        }\n        return playerInstance.addCuePoint({\n            callback: callback,\n            values: values,\n            type: type || 'percent' // position or percent\n        });\n    };\n}\n\n    \n        var video = new Video(/*isChromeless*/ false);\n    \n\n    function getElementsByClassName(className) {\n        if (document.getElementsByClassName) {\n            return document.getElementsByClassName(className);\n        } else if (document.querySelectorAll) { // for IE 8\n            return document.querySelectorAll('.' + className);\n        } else  if (document.evaluate) {\n            var pattern = \".//*[contains(concat(' ', @class, ' '), ' \" + className + \" ')]\";\n            var elements = document.evaluate(pattern, document, null, 0, null);\n            var result = [];\n            var i;\n            while(i = elements.iterateNext()) {\n                result.push(i);\n            }\n            return result;\n        } else { // Brute force fall back\n            var elements = document.getElementsByTagName(\"*\");\n            var pattern = new RegExp(\"(^|\\\\s)\" + className + \"(\\\\s|$)\");\n            var result = [];\n            for (var i = 0; i < elements.length; i++) {\n                if (pattern.test(elements[i].className)) {\n                    result.push(elements[i]);\n                }\n            }\n            return result;\n        }\n    }\n    \n    function loadGallery() {\n        var videoUnsupportedCallback = function (){\n            video.unload();\n            var selection = false;\n            \n            \n            // no images to select, fallback to poster Image\n            var $posterImage = getElementById('posterImage');\n            $posterImage.onclick = function() { $link.click(); };\n            $posterImage.style.display = (selection ? 'none' : 'block');\n            \n            \n        }\n        \n        \n            var playerCallback = null;\n        \n        \n        \n        \n            var vidDir = 'd3ed9h5moqw8s7.cloudfront.net/UglySweaterParty15New.1413994329615/UglySweaterParty15New';\n            video.initialize(vidDir, /*discreet*/false, /*autoplay*/true, videoUnsupportedCallback, /*playerCallback*/playerCallback, /*videoIndex*/null, /*autoplayCutOff*/-1);\n        \n\n        \n    }\n\n\n    \n\n    var $modalPrimaryCta = getElementById('modalCtaPrimary');\n    var $modalSecondaryCta = getElementById('modalCtaSecondary');\n    var $link = getElementById('link');\n    \n    \n \n    \n\n    var backgroundUrlDestination; // Stores the background url link\n    var backgroundUrlSig;\n\n\n    var primaryHeight, primaryTop, emptySpace;\n    var cta1Exists = false;\n    var openNewTabCta1 = !isInternalUrl(cta1Click); // Force link to open in new tab if link is external\n\n    // Set up the main CTA if it exists.\n    cta1Exists = false;\n    if (cta1SpriteImage.length > 0) {\n        addSpriteButton($modalPrimaryCta, cta1SpriteImageFullURL, cta1Width, cta1Height, cta1SpritePadding, cta1MaxWidth,\n                        cta1MaxHeight, cta1Click, PRIMARY_CTA_CLICK_TRAFFIC_EVENT_TYPE, openNewTabCta1, cta1ClickSig);\n        cta1Exists = true;\n    }\n    else if (cta1MainImage.length > 0) {\n        addButton($modalPrimaryCta, cta1MainImageFullURL, (cta1HoverImage.length > 0) ? cta1HoverImageFullURL : '',\n                  cta1Width, cta1Height, cta1MaxWidth, cta1MaxHeight, cta1Click, PRIMARY_CTA_CLICK_TRAFFIC_EVENT_TYPE, openNewTabCta1, cta1ClickSig);\n        cta1Exists = true;\n    }\n\n    if(cta1Click){ // Only set the background destination if it is defined\n        setBackgroundLink($link, cta1Click, cta1ClickSig);\n    }\n\n\n\n\n\n    // Set up the alternate CTA if it exists.\n    var cta2Exists = false;\n    var openNewTabCta2 = !isInternalUrl(cta2Click);\n\n    if (cta2SpriteImage.length > 0) {\n        addSpriteButton($modalSecondaryCta, cta2SpriteImageFullURL, cta2Width, cta2Height, cta2SpritePadding, cta2MaxWidth,\n                        cta2MaxHeight, cta2Click, ALTCTA_CLICK_TRAFFIC_EVENT_TYPE, openNewTabCta2, cta2ClickSig);\n        cta2Exists = true;\n    }\n    else if (cta2MainImage.length > 0) {\n        addButton($modalSecondaryCta, cta2MainImageFullURL, (cta2HoverImage.length > 0) ? cta2HoverImageFullURL : '',\n                  cta2Width, cta2Height, cta2MaxWidth, cta2MaxHeight, cta2Click, ALTCTA_CLICK_TRAFFIC_EVENT_TYPE, openNewTabCta2, cta2ClickSig);\n        cta2Exists = true;\n    }\n\n    // Position the alternate CTA\n    if (cta2Exists) {\n        $modalSecondaryCta.style.left =  cta2Left + \"px\";\n        $modalSecondaryCta.style.top = cta2Top + \"px\";\n    }\n\n\n    if (cta1Exists) {\n        $modalPrimaryCta.style.left =  cta1Left + \"px\";\n        $modalPrimaryCta.style.top = cta1Top + \"px\";\n    }\n\n    \n    var vidIsInit = false;\n    var hasClickedOnLinkEl = false;\n\n    var afterOpen = function() {\n        \n        \n        \n            loadGallery();\n\n            \n        \n        hasClickedOnLinkEl = false; // Reset link element and play video on subsequent plays. See https://tt.amazon.com/0038551638\n    };\n    \n    var afterClose = function() {\n        \n            if (typeof video != 'undefined' && video.isInitialized()) {\n                video.unload();\n            }\n        ;\n    };\n\n    /**\n     * Fire a pixel when the modal is closed.\n     */\n    function recordCloseClick() {\n        var trackingPixel = new Image();\n        trackingPixel.src = getClickTracker(CLOSE_MODAL_EVENT_TYPE);\n    };\n\n    function closeAndRecordClose() {\n        close();\n        recordCloseClick();\n    };\n\n    /**\n     * Use a timeout to close modal when applied to an anchor element, else link might not redirect\n     */\n    var closeAfterTimeout = function() {\n        setTimeout(close, 0);\n    };\n    \n\n    lightboxInfo.modalIsReady(afterOpen, afterClose);\n    var close = lightboxInfo.close;\n\n    // Record explicit close clicks only, don't count closes resulting from clickthroughs\n    bindEvent(getElementById('spotlightOverlay'), 'click', closeAndRecordClose);\n    bindEvent(getElementById('spotlightCloseButton'), 'click', closeAndRecordClose);\n\n    // If the background has a link, then close the modal when it is clicked. See https://tt.amazon.com/0037885694\n    bindEvent($link, 'click', function() {\n        \n            \n        if($link.href) {\n            closeAfterTimeout();\n        }\n    });\n\n    bindEvent($modalPrimaryCta, 'click', closeAfterTimeout);\n    bindEvent($modalSecondaryCta, 'click', closeAfterTimeout);\n    \n    // Setup ad feedback link\n    bindEvent(getElementById('spotlightFeedback'), 'click', function() {\n        close();\n        lightboxInfo.data.openFeedback();\n    });\n} catch(ex) {\n    \n        if(window.ueLogError) {\n            var additionalInfo = { \n                logLevel : 'ERROR',\n                attribution : 'Display Advertising - CX',\n                message : 'Error in Shazam creative 854220 '\n            };\n            window.ueLogError(ex, additionalInfo);\n        }\n    \n}\n// setTimeout fixes load on back button for safari in some slots\n})(window, document, parent);\n<\/script>\n"),(/s/.test(location.protocol)?"//images-na.ssl-":"//g-ecx.")+"images-amazon.com/images/G/01/shazam/30026-Modal-940x600-1xJyuB._V321088532_.jpg");
(new Image).src=a}(window,document,parent);
